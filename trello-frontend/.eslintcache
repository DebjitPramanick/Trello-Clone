[{"D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\index.js":"1","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\App.js":"2","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\Home.js":"3","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\Lists\\List.js":"4","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\Lists\\Title.js":"5","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\Card\\Card.js":"6","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\Input\\InputConainer.js":"7","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\Input\\InputCard.js":"8","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\utils\\Data.js":"9","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\utils\\StoredAPI.js":"10","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\NavBar\\Sidebar.js":"11","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\NavBar\\Navbars.js":"12","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\utils\\Colors.js":"13","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\utils\\ImageApi.js":"14","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\utils\\Config.js":"15","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\Loader\\Loader.js":"16","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\Login\\Login.js":"17","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\utils\\Redux\\StateProvider.js":"18","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\utils\\Redux\\Reducer.js":"19","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\utils\\Firebase.js":"20","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\NavBar\\Headerbar.js":"21","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\utils\\Axios.js":"22","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\utils\\Functions\\allFunctions.js":"23"},{"size":648,"mtime":1612506449594,"results":"24","hashOfConfig":"25"},{"size":3127,"mtime":1613185971469,"results":"26","hashOfConfig":"25"},{"size":6969,"mtime":1613185954344,"results":"27","hashOfConfig":"25"},{"size":2338,"mtime":1613183847251,"results":"28","hashOfConfig":"25"},{"size":1944,"mtime":1613118943097,"results":"29","hashOfConfig":"25"},{"size":4711,"mtime":1613181856875,"results":"30","hashOfConfig":"25"},{"size":1373,"mtime":1612921204685,"results":"31","hashOfConfig":"25"},{"size":2604,"mtime":1613121025377,"results":"32","hashOfConfig":"25"},{"size":2023,"mtime":1612917569972,"results":"33","hashOfConfig":"25"},{"size":68,"mtime":1612233894292,"results":"34","hashOfConfig":"25"},{"size":4106,"mtime":1613117253032,"results":"35","hashOfConfig":"25"},{"size":395,"mtime":1612508582136,"results":"36","hashOfConfig":"25"},{"size":158,"mtime":1612406565160,"results":"37","hashOfConfig":"25"},{"size":651,"mtime":1612920540746,"results":"38","hashOfConfig":"25"},{"size":148,"mtime":1612408980247,"results":"39","hashOfConfig":"25"},{"size":990,"mtime":1612503620016,"results":"40","hashOfConfig":"25"},{"size":4610,"mtime":1613187423208,"results":"41","hashOfConfig":"25"},{"size":380,"mtime":1612505642266,"results":"42","hashOfConfig":"25"},{"size":541,"mtime":1613108302001,"results":"43","hashOfConfig":"25"},{"size":700,"mtime":1612516245155,"results":"44","hashOfConfig":"25"},{"size":1829,"mtime":1613121935004,"results":"45","hashOfConfig":"25"},{"size":134,"mtime":1613103735798,"results":"46","hashOfConfig":"25"},{"size":578,"mtime":1613108664062,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"oormj3",{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\index.js",[],["100","101"],"D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\App.js",["102","103"],"D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\Home.js",["104","105","106","107","108","109","110","111","112","113"],"D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\Lists\\List.js",["114","115","116"],"import React, {useState} from 'react'\r\nimport \"./Title.css\"\r\n\r\nimport { Paper, CssBaseline } from \"@material-ui/core\";\r\nimport { makeStyles,fade } from \"@material-ui/core/styles\";\r\n\r\nimport Title from './Title';\r\nimport Card from '../Card/Card';\r\nimport InputConainer from '../Input/InputConainer';\r\n\r\n\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        minWidth: '300px',\r\n        backgroundColor: '#EBECF0',\r\n        marginLeft: theme.spacing(1),\r\n        marginTop: theme.spacing(1),\r\n        paddingTop: theme.spacing(1),\r\n        \r\n    },\r\n    cardContainer: {\r\n        marginTop: theme.spacing(4)\r\n    },\r\n    \r\n}))\r\n\r\n\r\nconst List = ({ list, index }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n\r\n        <Draggable draggableId={list._id} index={index}>\r\n\r\n            {(provided) => (\r\n                <div\r\n                    ref={provided.innerRef} {...provided.dragHandleProps}\r\n                    {...provided.draggableProps}\r\n                >\r\n                    <Paper className={classes.root}>\r\n                        <CssBaseline />\r\n                        <Title title={list.title} index={index} />\r\n\r\n                        <Droppable droppableId={list._id}>\r\n                            {(provided) => (\r\n                                <div\r\n                                    ref={provided.innerRef} {...provided.droppableProps}\r\n                                    className={classes.cardContainer}\r\n                                >\r\n                                    {\r\n                                        list.cards && list.cards.map((card, i) => (\r\n                                            <Card key={card._id} card={card} cardIndex={i}\r\n                                            listIndex={index}/>\r\n                                        ))\r\n                                    }\r\n                                    {provided.placeholder}\r\n                                </div>\r\n                            )}\r\n\r\n                        </Droppable>\r\n\r\n\r\n                        <InputConainer listID={list._id} index={index} type={'card'} />\r\n                    </Paper>\r\n                </div>\r\n            )}\r\n\r\n\r\n        </Draggable>\r\n        \r\n    )\r\n}\r\n\r\nexport default List\r\n","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\Lists\\Title.js",[],"D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\Card\\Card.js",["117","118"],"import React, { useState, useContext } from 'react'\r\nimport { Paper, InputBase, Typography } from \"@material-ui/core\";\r\nimport { makeStyles, fade } from \"@material-ui/core/styles\";\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport StoredAPI from \"../../utils/StoredAPI\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        maxWidth: '300px',\r\n        padding: theme.spacing(1, 1, 1, 2),\r\n        margin: theme.spacing(1),\r\n        cursor: 'pointer'\r\n    },\r\n    popupScreen: {\r\n        width: '100vw',\r\n        height: '100vh',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        position: 'fixed',\r\n        top: '0',\r\n        right: '0',\r\n        left: '0',\r\n        backgroundColor: fade('#000', 0.86),\r\n        cursor: 'not-allowed'\r\n    },\r\n    popup: {\r\n        width: '600px',\r\n        height: '600px',\r\n        borderRadius: '10px',\r\n        backgroundColor: 'white',\r\n        padding: theme.spacing(4),\r\n        position: 'relative',\r\n        cursor: 'auto',\r\n        overflow: 'hidden'\r\n    },\r\n    cancel: {\r\n        cursor: 'pointer',\r\n        position: 'absolute',\r\n        right: '0',\r\n        top: '0',\r\n        margin: theme.spacing(4)\r\n    },\r\n    input: {\r\n        maxWidth: '600px',\r\n        height: 'fit-content',\r\n        marginTop: theme.spacing(2),\r\n        padding: theme.spacing(1),\r\n        \"&:focus\": {\r\n            backgroundColor: '#ddd'\r\n        },\r\n        fontSize: '14px'\r\n    },\r\n    editableTitle: {\r\n        maxWidth: '600px',\r\n        flexGrow: '1',\r\n        color: 'grey',\r\n        marginTop: theme.spacing(4),\r\n        fontSize: '14px'\r\n    },\r\n\r\n}))\r\n\r\nconst Card = ({ card, cardIndex, listIndex }) => {\r\n\r\n\r\n    const { updateCardContent, removeCard } = useContext(StoredAPI)\r\n    const classes = useStyles()\r\n\r\n    const [popup, setPopup] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [content, setContent] = useState(card.content)\r\n\r\n    const handleOnDone = () => {\r\n        if(content.length <= 1060){\r\n            updateCardContent(content, listIndex, cardIndex)\r\n            setOpen(!open);\r\n        }\r\n        else{\r\n            alert(\"Character limit exceeded. Try to add note within 1060 characters.\")\r\n        }\r\n    }\r\n\r\n    const handleDelete = () =>{\r\n        removeCard(listIndex, cardIndex);\r\n        setPopup(false)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n\r\n            { popup && (\r\n                <div className={classes.popupScreen}>\r\n                    <div className={classes.popup}>\r\n                        <CancelIcon className={classes.cancel} onClick={() => setPopup(false)} />\r\n                        <h1>{card.title}</h1>\r\n                        <p>Card added - {card.date}</p>\r\n                        {open ? (\r\n                            <div>\r\n                                <InputBase value={content}\r\n                                    autoFocus\r\n                                    inputProps={{\r\n                                        className: classes.input\r\n                                    }}\r\n                                    fullWidth\r\n                                    onChange={(e) => setContent(e.target.value)}\r\n                                />\r\n                                <button className=\"done-btn\" onClick={handleOnDone}>Done</button>\r\n                            </div>\r\n                        ) : (\r\n                                <div className={classes.editableTitleContainer}>\r\n\r\n                                    <Typography className={classes.editableTitle}\r\n                                        onClick={() => setOpen(!open)}>{content}</Typography>\r\n\r\n                                </div>\r\n                            )}\r\n\r\n                        <div className=\"delete-btn\" onClick={handleDelete}>\r\n                            <DeleteIcon className=\"mui-btn\"/>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n\r\n            )}\r\n\r\n            <Draggable draggableId={card._id} index={cardIndex}>\r\n                {(provided) => (\r\n                    <div\r\n                        ref={provided.innerRef} {...provided.dragHandleProps}\r\n                        {...provided.draggableProps}\r\n                        onClick={() => setPopup(true)}\r\n                    >\r\n                        <Paper className={classes.card}>{card.title}</Paper>\r\n                    </div>\r\n                )}\r\n\r\n            </Draggable>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\Input\\InputConainer.js",["119"],"import React, {useState} from 'react'\r\nimport { Paper, Collapse, Typography } from \"@material-ui/core\";\r\nimport { makeStyles, fade } from \"@material-ui/core/styles\";\r\nimport InputCard from './InputCard';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        marginTop: theme.spacing(1),\r\n        minWidth: '300px',\r\n        maxWidth: '300px',\r\n        cursor: 'pointer'\r\n    },\r\n    addCard: {\r\n        padding: theme.spacing(1, 1, 1, 2),\r\n        margin: theme.spacing(0, 1, 1, 1),\r\n        backgroundColor: '#EBECF0',\r\n        '&:hover': {\r\n            backgroundColor: \"grey\"\r\n        }\r\n    }\r\n}))\r\n\r\n\r\nconst InputConainer = ({listID, index, type}) => {\r\n\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(false);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Collapse in={open}>\r\n                <InputCard setOpen={setOpen} listID={listID} index={index} type={type}/>\r\n            </Collapse>\r\n\r\n            <Collapse in={!open}>\r\n                <Paper className={classes.addCard} elevation={0}\r\n                onClick={() => setOpen(!open)}>\r\n                    <Typography>\r\n                        {type==='card' ? '+ Add a card' : '+ Add another list'}\r\n                    </Typography>\r\n                </Paper>\r\n            </Collapse>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputConainer\r\n","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\Input\\InputCard.js",[],"D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\utils\\Data.js",["120"],"\r\nconst cards = [\r\n    {\r\n        id: 'card-1',\r\n        date: '29 Jan, 2021',\r\n        title: 'Learning how to cook',\r\n    },\r\n    {\r\n        id: 'card-2',\r\n        date: '14 Jan, 2021',\r\n        title: 'Making sandwich',\r\n    },\r\n    {\r\n        id: 'card-3',\r\n        date: '24 Jan, 2021',\r\n        title: 'Taking the trash out',\r\n    },\r\n];\r\n\r\nconst data = {\r\n    lists: {\r\n        'list_1': {\r\n            id: 'list_1',\r\n            title: 'Todo',\r\n            cards,\r\n        },\r\n    },\r\n    listIds: ['list_1'],\r\n};\r\n\r\nconst data1 = {\r\n    \"name\": \"Debjit Pramanick\",\r\n    \"email\": \"debjitpramanick1@gmail.com\",\r\n    \"lists\": [\r\n        {\r\n            \"title\": \"Sample List 1\",\r\n            \"cards\": [\r\n                {\r\n                    \"title\": \"Coding\",\r\n                    \"content\": \"I have to learn coding tommorow.\",\r\n                    \"dateAdded\": \"10 Feb, 2021\"\r\n                },\r\n                {\r\n                    \"title\": \"Study\",\r\n                    \"content\": \"I have to study a lot today.\",\r\n                    \"dateAdded\": \"9 Feb, 2021\"\r\n                },\r\n                {\r\n                    \"title\": \"Eating\",\r\n                    \"content\": \"I have to wat at 12 PM.\",\r\n                    \"dateAdded\": \"10 Feb, 2021\"\r\n                },\r\n                {\r\n                    \"title\": \"Meeting\",\r\n                    \"content\": \"I have a meeting at 5 PM.\",\r\n                    \"dateAdded\": \"11 Feb, 2021\"\r\n                },\r\n            ],\r\n        },\r\n\r\n        {\r\n            \"title\": \"Sample List 2\",\r\n            \"cards\": [\r\n                {\r\n                    \"title\": \"Coding\",\r\n                    \"content\": \"I have to learn coding tommorow.\",\r\n                    \"dateAdded\": \"10 Feb, 2021\"\r\n                },\r\n                {\r\n                    \"title\": \"Meeting\",\r\n                    \"content\": \"I have a meeting at 5 PM.\",\r\n                    \"dateAdded\": \"11 Feb, 2021\"\r\n                },\r\n            ],\r\n        },\r\n    ],\r\n}\r\n\r\nexport default data;","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\utils\\StoredAPI.js",[],"D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\NavBar\\Sidebar.js",[],"D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\NavBar\\Navbars.js",[],"D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\utils\\Colors.js",[],"D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\utils\\ImageApi.js",[],"D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\utils\\Config.js",[],"D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\Loader\\Loader.js",[],"D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\Login\\Login.js",["121","122","123"],"D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\utils\\Redux\\StateProvider.js",[],"D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\utils\\Redux\\Reducer.js",[],"D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\utils\\Firebase.js",[],"D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\NavBar\\Headerbar.js",["124","125"],"import React from 'react'\r\nimport \"./Headerbar.css\"\r\nimport { Avatar, Button } from \"@material-ui/core\"\r\nimport { useStateValue } from '../../utils/Redux/StateProvider';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\nimport InsertPhotoIcon from '@material-ui/icons/InsertPhoto';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    topbar: {\r\n        backgroundColor: 'transparent'\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    btn: {\r\n        color: 'white',\r\n        backgroundColor: '#00bb7d',\r\n        color: '#fff',\r\n        '&:hover': {\r\n            backgroundColor: '#0C2D48'\r\n        },\r\n        cursor: 'pointer',\r\n        fontSize: '12px',\r\n        height: '36px'\r\n    }\r\n}))\r\n\r\n\r\nconst Headerbar = ({ setOpenMenu }) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [{ user }, dispatch] = useStateValue();\r\n\r\n\r\n    const logOut = () =>{\r\n        localStorage.removeItem('DBUSER');\r\n        localStorage.removeItem('FIREBASEUSER'); \r\n        window.location.reload(true);\r\n    }\r\n\r\n    return (\r\n        <div className='headerContainer'>\r\n            <div className=\"display\">\r\n                <Avatar src={user.photo} />\r\n                <h3>{user.name} - Dashboard</h3>\r\n            </div>\r\n\r\n\r\n            <div className=\"btn-container\">\r\n\r\n                <Button className={classes.btn}\r\n                    onClick={logOut}>\r\n                        <ExitToAppIcon />\r\n                        Log Out\r\n                </Button>\r\n\r\n                <Button className={classes.btn}\r\n                    onClick={() => setOpenMenu(true)}>\r\n                        <InsertPhotoIcon />\r\n                        Change Background\r\n                </Button>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Headerbar\r\n","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\utils\\Axios.js",[],"D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\utils\\Functions\\allFunctions.js",[],{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":3,"column":22,"nodeType":"132","messageId":"133","endLine":3,"endColumn":26},{"ruleId":"134","severity":1,"message":"135","line":40,"column":8,"nodeType":"136","endLine":40,"endColumn":10,"suggestions":"137"},{"ruleId":"130","severity":1,"message":"138","line":3,"column":8,"nodeType":"132","messageId":"133","endLine":3,"endColumn":13},{"ruleId":"130","severity":1,"message":"139","line":14,"column":10,"nodeType":"132","messageId":"133","endLine":14,"endColumn":21},{"ruleId":"130","severity":1,"message":"140","line":14,"column":23,"nodeType":"132","messageId":"133","endLine":14,"endColumn":34},{"ruleId":"130","severity":1,"message":"141","line":39,"column":18,"nodeType":"132","messageId":"133","endLine":39,"endColumn":25},{"ruleId":"130","severity":1,"message":"142","line":41,"column":12,"nodeType":"132","messageId":"133","endLine":41,"endColumn":19},{"ruleId":"130","severity":1,"message":"143","line":41,"column":21,"nodeType":"132","messageId":"133","endLine":41,"endColumn":31},{"ruleId":"134","severity":1,"message":"144","line":51,"column":8,"nodeType":"136","endLine":51,"endColumn":10,"suggestions":"145"},{"ruleId":"146","severity":1,"message":"147","line":169,"column":59,"nodeType":"148","messageId":"149","endLine":169,"endColumn":61},{"ruleId":"146","severity":1,"message":"147","line":170,"column":54,"nodeType":"148","messageId":"149","endLine":170,"endColumn":56},{"ruleId":"146","severity":1,"message":"147","line":171,"column":67,"nodeType":"148","messageId":"149","endLine":171,"endColumn":69},{"ruleId":"130","severity":1,"message":"150","line":1,"column":16,"nodeType":"132","messageId":"133","endLine":1,"endColumn":24},{"ruleId":"130","severity":1,"message":"131","line":5,"column":21,"nodeType":"132","messageId":"133","endLine":5,"endColumn":25},{"ruleId":"130","severity":1,"message":"151","line":12,"column":10,"nodeType":"132","messageId":"133","endLine":12,"endColumn":25},{"ruleId":"130","severity":1,"message":"151","line":7,"column":10,"nodeType":"132","messageId":"133","endLine":7,"endColumn":25},{"ruleId":"130","severity":1,"message":"152","line":7,"column":27,"nodeType":"132","messageId":"133","endLine":7,"endColumn":36},{"ruleId":"130","severity":1,"message":"131","line":3,"column":22,"nodeType":"132","messageId":"133","endLine":3,"endColumn":26},{"ruleId":"130","severity":1,"message":"153","line":31,"column":7,"nodeType":"132","messageId":"133","endLine":31,"endColumn":12},{"ruleId":"130","severity":1,"message":"154","line":1,"column":27,"nodeType":"132","messageId":"133","endLine":1,"endColumn":36},{"ruleId":"130","severity":1,"message":"155","line":3,"column":18,"nodeType":"132","messageId":"133","endLine":3,"endColumn":28},{"ruleId":"156","severity":1,"message":"157","line":63,"column":12,"nodeType":"158","messageId":"149","endLine":63,"endColumn":15},{"ruleId":"159","severity":1,"message":"160","line":22,"column":9,"nodeType":"161","messageId":"149","endLine":22,"endColumn":14},{"ruleId":"130","severity":1,"message":"162","line":37,"column":22,"nodeType":"132","messageId":"133","endLine":37,"endColumn":30},"no-native-reassign",["163"],"no-negated-in-lhs",["164"],"no-unused-vars","'fade' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["165"],"'store' is defined but never used.","'updateCards' is defined but never used.","'updateLists' is defined but never used.","'setUser' is assigned a value but never used.","'listIDs' is assigned a value but never used.","'setListIDs' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'email'. Either include it or remove the dependency array.",["166"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","'DragDropContext' is defined but never used.","'Droppable' is defined but never used.","'data1' is assigned a value but never used.","'useEffect' is defined but never used.","'IconButton' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","no-dupe-keys","Duplicate key 'color'.","ObjectExpression","'dispatch' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},"Update the dependencies array to be: [user]",{"range":"171","text":"172"},"Update the dependencies array to be: [email]",{"range":"173","text":"174"},[1139,1141],"[user]",[1383,1385],"[email]"]