[{"D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\index.js":"1","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\App.js":"2","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\Home.js":"3","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\Lists\\List.js":"4","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\Lists\\Title.js":"5","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\Card\\Card.js":"6","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\Input\\InputConainer.js":"7","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\Input\\InputCard.js":"8","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\utils\\Data.js":"9","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\utils\\StoredAPI.js":"10","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\NavBar\\Sidebar.js":"11","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\NavBar\\Navbars.js":"12","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\utils\\Colors.js":"13","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\utils\\ImageApi.js":"14","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\utils\\Config.js":"15","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\Loader\\Loader.js":"16","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\Login\\Login.js":"17","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\utils\\Redux\\StateProvider.js":"18","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\utils\\Redux\\Reducer.js":"19","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\utils\\Firebase.js":"20","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\NavBar\\Headerbar.js":"21"},{"size":648,"mtime":1612506449594,"results":"22","hashOfConfig":"23"},{"size":1965,"mtime":1612521599392,"results":"24","hashOfConfig":"23"},{"size":4902,"mtime":1612523172238,"results":"25","hashOfConfig":"23"},{"size":2320,"mtime":1612520357543,"results":"26","hashOfConfig":"23"},{"size":1865,"mtime":1612412940509,"results":"27","hashOfConfig":"23"},{"size":2365,"mtime":1612521908012,"results":"28","hashOfConfig":"23"},{"size":1352,"mtime":1612321461128,"results":"29","hashOfConfig":"23"},{"size":2598,"mtime":1612321917350,"results":"30","hashOfConfig":"23"},{"size":555,"mtime":1612521870263,"results":"31","hashOfConfig":"23"},{"size":68,"mtime":1612233894292,"results":"32","hashOfConfig":"23"},{"size":3891,"mtime":1612510878069,"results":"33","hashOfConfig":"23"},{"size":395,"mtime":1612508582136,"results":"34","hashOfConfig":"23"},{"size":158,"mtime":1612406565160,"results":"35","hashOfConfig":"23"},{"size":680,"mtime":1612409552087,"results":"36","hashOfConfig":"23"},{"size":148,"mtime":1612408980247,"results":"37","hashOfConfig":"23"},{"size":990,"mtime":1612503620016,"results":"38","hashOfConfig":"23"},{"size":2392,"mtime":1612519892739,"results":"39","hashOfConfig":"23"},{"size":380,"mtime":1612505642266,"results":"40","hashOfConfig":"23"},{"size":567,"mtime":1612509036162,"results":"41","hashOfConfig":"23"},{"size":700,"mtime":1612516245155,"results":"42","hashOfConfig":"23"},{"size":1829,"mtime":1612510105268,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"oormj3",{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"49"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"49"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"49"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"49"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"49"},"D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\index.js",[],"D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\App.js",["93"],"import React, { useState } from 'react'\r\nimport Home from './components/Home'\r\nimport { makeStyles, fade } from \"@material-ui/core/styles\";\r\nimport Navbars from './components/NavBar/Navbars';\r\n\r\n\r\nimport StoredApi from './utils/StoredAPI'\r\nimport Loader from './components/Loader/Loader';\r\nimport Login from './components/Login/Login';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        height: '100vh',\r\n        backgroundPosition: 'center',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: 'cover',\r\n        display: 'flex',\r\n        flexDirection: \"column\"\r\n    },\r\n}))\r\n\r\n\r\nconst App = () => {\r\n\r\n    const trelloUser = JSON.parse(localStorage.getItem('trelloUser'));\r\n    const background = JSON.parse(localStorage.getItem('background'));\r\n\r\n    const [user, setUser] = useState(trelloUser)\r\n\r\n\r\n    const classes = useStyles();\r\n\r\n    const [bg, setBg] = useState(background);\r\n    const [loader, setLoader] = useState(false);\r\n\r\n\r\n    const changeBG = (url) => {\r\n        console.log(url)\r\n        setLoader(true);\r\n        setBg(url);\r\n        setTimeout(() => {\r\n            setLoader(false)\r\n        }, 3000)\r\n\r\n        localStorage.setItem('background',JSON.stringify(url))\r\n\r\n    }\r\n\r\n\r\n    return (\r\n\r\n\r\n        <div>\r\n\r\n            {!user ? <Login setUser={setUser}/>\r\n            : (\r\n                    <StoredApi.Provider value={{ changeBG }}>\r\n\r\n\r\n                        {loader && <Loader />}\r\n\r\n                        <div className={classes.root}\r\n                            style={{\r\n                                backgroundColor: `${bg}`,\r\n                                backgroundImage: `url(${bg})`,\r\n                            }}\r\n                        >\r\n                            <Navbars />\r\n                            <Home />\r\n                        </div>\r\n                    </StoredApi.Provider>\r\n            )}\r\n\r\n\r\n\r\n            \r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n",["94","95"],"D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\Home.js",["96"],"D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\Lists\\List.js",["97","98","99","100"],"import React, {useState} from 'react'\r\n\r\nimport { Paper, CssBaseline } from \"@material-ui/core\";\r\nimport { makeStyles,fade } from \"@material-ui/core/styles\";\r\nimport Title from './Title';\r\nimport Card from '../Card/Card';\r\nimport InputConainer from '../Input/InputConainer';\r\n\r\n\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        minWidth: '300px',\r\n        backgroundColor: '#EBECF0',\r\n        marginLeft: theme.spacing(1),\r\n        marginTop: theme.spacing(1),\r\n        paddingTop: theme.spacing(1),\r\n        \r\n    },\r\n    cardContainer: {\r\n        marginTop: theme.spacing(4)\r\n    },\r\n    \r\n}))\r\n\r\n\r\nconst List = ({ list, index }) => {\r\n    const classes = useStyles();\r\n\r\n\r\n    const local_list = JSON.parse(localStorage.getItem('lists')).lists\r\n\r\n\r\n    return (\r\n\r\n        <Draggable draggableId={list.id} index={index}>\r\n\r\n            {(provided) => (\r\n                <div\r\n                    ref={provided.innerRef} {...provided.dragHandleProps}\r\n                    {...provided.draggableProps}\r\n                >\r\n                    <Paper className={classes.root}>\r\n                        <CssBaseline />\r\n                        <Title title={list.title} listID={list.id} />\r\n\r\n\r\n                        <Droppable droppableId={list.id}>\r\n                            {(provided) => (\r\n                                <div\r\n                                    ref={provided.innerRef} {...provided.droppableProps}\r\n                                    className={classes.cardContainer}\r\n                                >\r\n                                    {\r\n                                        list.cards && list.cards.map((card, index) => (\r\n                                            <Card key={card.id} card={card} index={index}/>\r\n                                        ))\r\n                                    }\r\n                                    {provided.placeholder}\r\n                                </div>\r\n                            )}\r\n\r\n                        </Droppable>\r\n\r\n\r\n                        <InputConainer listID={list.id} type={'card'} />\r\n                    </Paper>\r\n                </div>\r\n            )}\r\n\r\n\r\n        </Draggable>\r\n        \r\n    )\r\n}\r\n\r\nexport default List\r\n","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\Lists\\Title.js",[],"D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\Card\\Card.js",["101","102"],"import React, { useState } from 'react'\r\nimport { Paper } from \"@material-ui/core\";\r\nimport { makeStyles, fade } from \"@material-ui/core/styles\";\r\n\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        maxWidth: '300px',\r\n        padding: theme.spacing(1, 1, 1, 2),\r\n        margin: theme.spacing(1),\r\n        cursor: 'pointer'\r\n    },\r\n    popupScreen: {\r\n        width: '100vw',\r\n        height: '100vh',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        position: 'fixed',\r\n        top: '0',\r\n        right: '0',\r\n        left: '0',\r\n        backgroundColor: fade('#000', 0.86),\r\n    },\r\n    popup: {\r\n        width: '600px',\r\n        height: '600px',\r\n        borderRadius: '10px',\r\n        backgroundColor: 'white',\r\n        padding: theme.spacing(4),\r\n        position: 'relative'\r\n    },\r\n    cancel: {\r\n        cursor: 'pointer',\r\n        position: 'absolute',\r\n        right: '0',\r\n        top: '0',\r\n        margin: theme.spacing(4)\r\n    }\r\n\r\n}))\r\n\r\nconst Card = ({ card, index }) => {\r\n\r\n    const classes = useStyles()\r\n\r\n    const [popup, setPopup] = useState(false);\r\n\r\n    const showDetails = (card) => {\r\n        setPopup(true)\r\n        console.log(card.title)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n\r\n            { popup && (\r\n                <div className={classes.popupScreen}>\r\n                    <div className={classes.popup}>\r\n                        <CancelIcon className={classes.cancel} onClick={() => setPopup(false)}/>\r\n                        <h1>{card.title}</h1>\r\n                        <p>Card added - {card.date}</p>\r\n                    </div>\r\n                </div>\r\n\r\n            )}\r\n\r\n            <Draggable draggableId={card.id} index={index}>\r\n                {(provided) => (\r\n                    <div\r\n                        ref={provided.innerRef} {...provided.dragHandleProps}\r\n                        {...provided.draggableProps}\r\n                        onClick={() => showDetails(card)}\r\n                    >\r\n                        <Paper className={classes.card}>{card.title}</Paper>\r\n                    </div>\r\n                )}\r\n\r\n            </Draggable>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\Input\\InputConainer.js",["103"],"import React, {useState} from 'react'\r\nimport { Paper, Collapse, Typography } from \"@material-ui/core\";\r\nimport { makeStyles, fade } from \"@material-ui/core/styles\";\r\nimport InputCard from './InputCard';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        marginTop: theme.spacing(1),\r\n        minWidth: '300px',\r\n        maxWidth: '300px',\r\n        cursor: 'pointer'\r\n    },\r\n    addCard: {\r\n        padding: theme.spacing(1, 1, 1, 2),\r\n        margin: theme.spacing(0, 1, 1, 1),\r\n        backgroundColor: '#EBECF0',\r\n        '&:hover': {\r\n            backgroundColor: \"grey\"\r\n        }\r\n    }\r\n}))\r\n\r\n\r\nconst InputConainer = ({listID, type}) => {\r\n\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(false);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Collapse in={open}>\r\n                <InputCard setOpen={setOpen} listID={listID} type={type}/>\r\n            </Collapse>\r\n\r\n            <Collapse in={!open}>\r\n                <Paper className={classes.addCard} elevation={0}\r\n                onClick={() => setOpen(!open)}>\r\n                    <Typography>\r\n                        {type==='card' ? '+ Add a card' : '+ Add another list'}\r\n                    </Typography>\r\n                </Paper>\r\n            </Collapse>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputConainer\r\n","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\Input\\InputCard.js",[],"D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\utils\\Data.js",[],"D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\utils\\StoredAPI.js",[],"D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\NavBar\\Sidebar.js",[],"D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\NavBar\\Navbars.js",[],"D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\utils\\Colors.js",[],"D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\utils\\ImageApi.js",[],"D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\utils\\Config.js",[],"D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\Loader\\Loader.js",[],"D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\Login\\Login.js",["104","105","106","107","108","109"],"import React, { useState } from 'react'\r\nimport { makeStyles, fade } from \"@material-ui/core/styles\";\r\nimport { Button, IconButton } from \"@material-ui/core\";\r\nimport { auth, provider, firebaseDB } from \"../../utils/Firebase\"\r\n\r\nimport { useStateValue } from '../../utils/Redux/StateProvider'\r\nimport { actionTypes } from '../../utils/Redux/Reducer'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        height: '100vh',\r\n        width: '100vw',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    loginBox: {\r\n        fontFamily: 'Arial',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        backgroundColor: '#ededed',\r\n        height: '260px',\r\n        width: '260px',\r\n        padding: theme.spacing(8),\r\n        borderRadius: '8px'\r\n    },\r\n    btn: {\r\n        backgroundColor: '#007FFF',\r\n        color: 'white',\r\n        padding: theme.spacing(1, 1, 1, 1),\r\n        marginTop: theme.spacing(4),\r\n        '&:hover': {\r\n            backgroundColor: \"#0D4F8B\"\r\n        }\r\n    },\r\n    image: {\r\n        width: '200px',\r\n        height: '200px'\r\n    }\r\n\r\n}))\r\n\r\n\r\n\r\nconst Login = ({ setUser }) => {\r\n\r\n\r\n    const [{ }, dispatch] = useStateValue();\r\n    const classes = useStyles();\r\n\r\n    const ref = firebaseDB.child('users')\r\n\r\n\r\n    const signIn = () => {\r\n        auth.signInWithPopup(provider)\r\n            .then(res => {\r\n                const data = {\r\n                    name: res.user.displayName,\r\n                    email: res.user.email,\r\n                }\r\n                dispatch({\r\n                    type: actionTypes.SET_USER,\r\n                    user: res.user,\r\n                })\r\n                setUser(true);\r\n            })\r\n            .catch((error) => alert(error.message))\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.loginBox}>\r\n                <img src=\"https://cdn1.iconfinder.com/data/icons/designer-skills/128/trello-512.png\" alt=\"\"\r\n                    className={classes.image} />\r\n                Welcome to Trello clone\r\n                <Button className={classes.btn}\r\n                    onClick={signIn}>\r\n                    Signin with Google\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\utils\\Redux\\StateProvider.js",[],"D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\utils\\Redux\\Reducer.js",[],"D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\utils\\Firebase.js",[],"D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\NavBar\\Headerbar.js",["110","111"],"import React from 'react'\r\nimport \"./Headerbar.css\"\r\nimport { Avatar, Button } from \"@material-ui/core\"\r\nimport { useStateValue } from '../../utils/Redux/StateProvider';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\nimport InsertPhotoIcon from '@material-ui/icons/InsertPhoto';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    topbar: {\r\n        backgroundColor: 'transparent'\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    btn: {\r\n        color: 'white',\r\n        backgroundColor: '#145DA0',\r\n        color: '#fff',\r\n        '&:hover': {\r\n            backgroundColor: '#0C2D48'\r\n        },\r\n        cursor: 'pointer',\r\n        border: '1px solid white',\r\n        fontSize: '12px',\r\n        height: '36px'\r\n    }\r\n}))\r\n\r\n\r\nconst Headerbar = ({ setOpenMenu }) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [{ user }, dispatch] = useStateValue();\r\n\r\n\r\n    const logOut = () =>{\r\n        localStorage.removeItem('trelloUser'); \r\n        window.location.reload(true);\r\n    }\r\n\r\n    return (\r\n        <div className='headerContainer'>\r\n            <div className=\"display\">\r\n                <Avatar src={user.photoURL} />\r\n                <h3>{user.displayName} - Dashboard</h3>\r\n            </div>\r\n\r\n\r\n            <div className=\"btn-container\">\r\n\r\n                <Button className={classes.btn}\r\n                    onClick={logOut}>\r\n                        <ExitToAppIcon />\r\n                        Log Out\r\n                </Button>\r\n\r\n                <Button className={classes.btn}\r\n                    onClick={() => setOpenMenu(true)}>\r\n                        <InsertPhotoIcon />\r\n                        Change Background\r\n                </Button>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Headerbar\r\n",{"ruleId":"112","severity":1,"message":"113","line":3,"column":22,"nodeType":"114","messageId":"115","endLine":3,"endColumn":26},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"112","severity":1,"message":"120","line":9,"column":10,"nodeType":"114","messageId":"115","endLine":9,"endColumn":20},{"ruleId":"112","severity":1,"message":"121","line":1,"column":16,"nodeType":"114","messageId":"115","endLine":1,"endColumn":24},{"ruleId":"112","severity":1,"message":"113","line":4,"column":21,"nodeType":"114","messageId":"115","endLine":4,"endColumn":25},{"ruleId":"112","severity":1,"message":"122","line":10,"column":10,"nodeType":"114","messageId":"115","endLine":10,"endColumn":25},{"ruleId":"112","severity":1,"message":"123","line":32,"column":11,"nodeType":"114","messageId":"115","endLine":32,"endColumn":21},{"ruleId":"112","severity":1,"message":"122","line":6,"column":10,"nodeType":"114","messageId":"115","endLine":6,"endColumn":25},{"ruleId":"112","severity":1,"message":"124","line":6,"column":27,"nodeType":"114","messageId":"115","endLine":6,"endColumn":36},{"ruleId":"112","severity":1,"message":"113","line":3,"column":22,"nodeType":"114","messageId":"115","endLine":3,"endColumn":26},{"ruleId":"112","severity":1,"message":"121","line":1,"column":17,"nodeType":"114","messageId":"115","endLine":1,"endColumn":25},{"ruleId":"112","severity":1,"message":"113","line":2,"column":22,"nodeType":"114","messageId":"115","endLine":2,"endColumn":26},{"ruleId":"112","severity":1,"message":"125","line":3,"column":18,"nodeType":"114","messageId":"115","endLine":3,"endColumn":28},{"ruleId":"126","severity":1,"message":"127","line":50,"column":12,"nodeType":"128","messageId":"129","endLine":50,"endColumn":15},{"ruleId":"112","severity":1,"message":"130","line":53,"column":11,"nodeType":"114","messageId":"115","endLine":53,"endColumn":14},{"ruleId":"112","severity":1,"message":"131","line":59,"column":23,"nodeType":"114","messageId":"115","endLine":59,"endColumn":27},{"ruleId":"132","severity":1,"message":"133","line":22,"column":9,"nodeType":"134","messageId":"129","endLine":22,"endColumn":14},{"ruleId":"112","severity":1,"message":"135","line":38,"column":22,"nodeType":"114","messageId":"115","endLine":38,"endColumn":30},"no-unused-vars","'fade' is defined but never used.","Identifier","unusedVar","no-native-reassign",["136"],"no-negated-in-lhs",["137"],"'firebaseDB' is defined but never used.","'useState' is defined but never used.","'DragDropContext' is defined but never used.","'local_list' is assigned a value but never used.","'Droppable' is defined but never used.","'IconButton' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'ref' is assigned a value but never used.","'data' is assigned a value but never used.","no-dupe-keys","Duplicate key 'color'.","ObjectExpression","'dispatch' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]