[{"D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\index.js":"1","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\App.js":"2","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\Home.js":"3","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\Lists\\List.js":"4","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\Lists\\Title.js":"5","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\Card\\Card.js":"6","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\Input\\InputConainer.js":"7","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\Input\\InputCard.js":"8","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\utils\\Data.js":"9","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\utils\\StoredAPI.js":"10","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\NavBar\\Sidebar.js":"11","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\NavBar\\Navbars.js":"12","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\utils\\Colors.js":"13","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\utils\\ImageApi.js":"14","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\utils\\Config.js":"15","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\Loader\\Loader.js":"16","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\Login\\Login.js":"17","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\utils\\Redux\\StateProvider.js":"18","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\utils\\Redux\\Reducer.js":"19","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\utils\\Firebase.js":"20","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\NavBar\\Headerbar.js":"21","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\utils\\Axios.js":"22"},{"size":648,"mtime":1612506449594,"results":"23","hashOfConfig":"24"},{"size":1939,"mtime":1612920507253,"results":"25","hashOfConfig":"24"},{"size":4991,"mtime":1612925335197,"results":"26","hashOfConfig":"24"},{"size":2257,"mtime":1612925070047,"results":"27","hashOfConfig":"24"},{"size":1863,"mtime":1612925096548,"results":"28","hashOfConfig":"24"},{"size":2371,"mtime":1612920705588,"results":"29","hashOfConfig":"24"},{"size":1373,"mtime":1612921204685,"results":"30","hashOfConfig":"24"},{"size":2604,"mtime":1612921232956,"results":"31","hashOfConfig":"24"},{"size":2023,"mtime":1612917569972,"results":"32","hashOfConfig":"24"},{"size":68,"mtime":1612233894292,"results":"33","hashOfConfig":"24"},{"size":3939,"mtime":1612920448242,"results":"34","hashOfConfig":"24"},{"size":395,"mtime":1612508582136,"results":"35","hashOfConfig":"24"},{"size":158,"mtime":1612406565160,"results":"36","hashOfConfig":"24"},{"size":651,"mtime":1612920540746,"results":"37","hashOfConfig":"24"},{"size":148,"mtime":1612408980247,"results":"38","hashOfConfig":"24"},{"size":990,"mtime":1612503620016,"results":"39","hashOfConfig":"24"},{"size":3123,"mtime":1613013147035,"results":"40","hashOfConfig":"24"},{"size":380,"mtime":1612505642266,"results":"41","hashOfConfig":"24"},{"size":548,"mtime":1612920532234,"results":"42","hashOfConfig":"24"},{"size":700,"mtime":1612516245155,"results":"43","hashOfConfig":"24"},{"size":1829,"mtime":1612510105268,"results":"44","hashOfConfig":"24"},{"size":134,"mtime":1612918355343,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"oormj3",{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"48"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\index.js",[],["98","99"],"D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\App.js",["100"],"import React, { useState } from 'react'\r\nimport Home from './components/Home'\r\nimport { makeStyles, fade } from \"@material-ui/core/styles\";\r\nimport Navbars from './components/NavBar/Navbars';\r\n\r\n\r\nimport StoredApi from './utils/StoredAPI'\r\nimport Loader from './components/Loader/Loader';\r\nimport Login from './components/Login/Login';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        height: '100vh',\r\n        backgroundPosition: 'center',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: 'cover',\r\n        display: 'flex',\r\n        flexDirection: \"column\"\r\n    },\r\n}))\r\n\r\n\r\nconst App = () => {\r\n\r\n    const trelloUser = JSON.parse(localStorage.getItem('trelloUser'));\r\n    const background = JSON.parse(localStorage.getItem('background'));\r\n\r\n    const [user, setUser] = useState(trelloUser)\r\n\r\n\r\n    const classes = useStyles();\r\n\r\n    const [bg, setBg] = useState(background);\r\n    const [loader, setLoader] = useState(false);\r\n\r\n\r\n    const changeBG = (url) => {\r\n        setLoader(true);\r\n        setBg(url);\r\n        setTimeout(() => {\r\n            setLoader(false)\r\n        }, 3000)\r\n\r\n        localStorage.setItem('background',JSON.stringify(url))\r\n\r\n    }\r\n\r\n\r\n    return (\r\n\r\n\r\n        <div>\r\n\r\n            {!user ? <Login setUser={setUser}/>\r\n            : (\r\n                    <StoredApi.Provider value={{ changeBG }}>\r\n\r\n\r\n                        {loader && <Loader />}\r\n\r\n                        <div className={classes.root}\r\n                            style={{\r\n                                backgroundColor: `${bg}`,\r\n                                backgroundImage: `url(${bg})`,\r\n                            }}\r\n                        >\r\n                            <Navbars />\r\n                            <Home />\r\n                        </div>\r\n                    </StoredApi.Provider>\r\n            )}\r\n\r\n\r\n\r\n            \r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\Home.js",["101","102","103","104","105","106","107","108","109"],"import React, { useState, useEffect } from 'react'\r\nimport List from \"../components/Lists/List\"\r\nimport store from \"../utils/Data\"\r\nimport StoredApi from \"../utils/StoredAPI\"\r\nimport { v4 as uuid } from 'uuid'\r\nimport InputConainer from './Input/InputConainer'\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport axios from \"../utils/Axios\"\r\n\r\nimport { DragDropContext, Droppable} from \"react-beautiful-dnd\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        maxWidth: '100vw',\r\n        overflowX: 'scroll',\r\n        height: '100vh'\r\n        },\r\n    listbg: {\r\n        width: '300px',\r\n        backgroundColor: '#EBECF0',\r\n        marginLeft: theme.spacing(1),\r\n        marginTop: theme.spacing(1)\r\n    }\r\n}))\r\n\r\n\r\n\r\nconst Home = () => {\r\n\r\n    const classes = useStyles();\r\n    const [data, setData] = useState({});\r\n    const [lists, setLists] = useState([])\r\n    const [listIDs, setListIDs] = useState([])\r\n\r\n    const [sample, setSample] = useState([])\r\n\r\n    useEffect(()=>{\r\n        axios.get('/users')\r\n        .then(res => {\r\n            setData(res.data[0])\r\n        })\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        axios.get('/users')\r\n            .then(res => {\r\n                setLists(res.data[0].lists)\r\n            })\r\n    }, [])\r\n\r\n\r\n\r\n    \r\n\r\n    const addMoreCard = (title, index) => {\r\n\r\n        const newCardId = uuid();\r\n        const date = new Date();\r\n        \r\n        const newCard = {\r\n            id: newCardId,\r\n            date: `${date.getDate()} ${date.toLocaleString('default', { month: 'short' })}, ${date.getFullYear()}`,\r\n            title: title,\r\n        }\r\n\r\n        const reqList = lists[index];\r\n        reqList.cards = [...reqList.cards, newCard]\r\n\r\n        const modList = {\r\n            ...reqList,\r\n            cards: reqList.cards\r\n        }\r\n\r\n        let allLists = [...lists];\r\n        allLists[index] = modList;\r\n        setLists(allLists)\r\n    }\r\n\r\n\r\n    const updateListTitle = (title, index) => {\r\n        const list = lists[index];\r\n        list.title = title;\r\n    }\r\n\r\n\r\n    const addMoreList = (title) => {\r\n        const newListId = uuid();\r\n        const newList = {\r\n            id: newListId,\r\n            title: title,\r\n            cards: []\r\n        }\r\n\r\n        // List is an array\r\n\r\n        setLists(list => [...list,newList])\r\n    }\r\n\r\n    const onDragEnd = (result) => {\r\n        const { destination, source, draggableId, type } = result;\r\n\r\n        if (!destination) {\r\n            return;\r\n        }\r\n\r\n        // if(type === 'list') {\r\n        //     const newListIds = data.listIds;\r\n        //     newListIds.splice(source.index,1);\r\n        //     newListIds.splice(destination.index,0, draggableId);\r\n        //     return;\r\n        // }\r\n\r\n        // const sourceList = data.lists[source.droppableId];\r\n        // const destinationList = data.lists[destination.droppableId];\r\n        // const draggingCard = sourceList.cards.filter(\r\n        //     (card) => card.id === draggableId\r\n        // )[0]\r\n\r\n        // if (source.droppableId === destination.droppableId) {\r\n        //     sourceList.cards.splice(source.index, 1);\r\n        //     destinationList.cards.splice(destination.index, 0, draggingCard);\r\n\r\n        //     const newState = {\r\n        //         ...data,\r\n        //         lists: {\r\n        //             ...data.lists,\r\n        //             [sourceList.id]: destinationList\r\n        //         }\r\n        //     }\r\n\r\n        //     setLists(newState);\r\n        // }\r\n\r\n        // else {\r\n        //     sourceList.cards.splice(source.index, 1);\r\n        //     destinationList.cards.splice(destinationList.index, 0, draggingCard);\r\n\r\n        //     const newState = {\r\n        //         ...data,\r\n        //         lists: {\r\n        //             ...data.lists,\r\n        //             [sourceList.id]: sourceList,\r\n        //             [destinationList.id]: destinationList,\r\n        //         }\r\n        //     }\r\n\r\n        //     setLists(newState)\r\n\r\n        // }\r\n    }\r\n\r\n    return (\r\n\r\n        <StoredApi.Provider value={{ addMoreCard, addMoreList, updateListTitle }}>\r\n            <DragDropContext onDragEnd={onDragEnd}>\r\n\r\n                <Droppable droppableId='list' type='list' direction='horizontal'>\r\n\r\n                    {(provided) => (\r\n\r\n                        <div className={classes.root}\r\n                            ref={provided.innerRef} {...provided.droppableProps}\r\n                        >\r\n\r\n                            {lists && lists.map((list,index) => {\r\n                                return <List list={list} key={list._id} index={index}/>\r\n                            })}\r\n\r\n                            <InputConainer type={'list'} />\r\n                            {provided.placeholder}\r\n                        </div>\r\n\r\n\r\n                    )}\r\n\r\n\r\n\r\n                </Droppable>\r\n\r\n            </DragDropContext>\r\n\r\n\r\n        </StoredApi.Provider>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\Lists\\List.js",["110","111","112"],"import React, {useState} from 'react'\r\n\r\nimport { Paper, CssBaseline } from \"@material-ui/core\";\r\nimport { makeStyles,fade } from \"@material-ui/core/styles\";\r\nimport Title from './Title';\r\nimport Card from '../Card/Card';\r\nimport InputConainer from '../Input/InputConainer';\r\n\r\n\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        minWidth: '300px',\r\n        backgroundColor: '#EBECF0',\r\n        marginLeft: theme.spacing(1),\r\n        marginTop: theme.spacing(1),\r\n        paddingTop: theme.spacing(1),\r\n        \r\n    },\r\n    cardContainer: {\r\n        marginTop: theme.spacing(4)\r\n    },\r\n    \r\n}))\r\n\r\n\r\nconst List = ({ list, index }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n\r\n        <Draggable draggableId={list._id} index={index}>\r\n\r\n            {(provided) => (\r\n                <div\r\n                    ref={provided.innerRef} {...provided.dragHandleProps}\r\n                    {...provided.draggableProps}\r\n                >\r\n                    <Paper className={classes.root}>\r\n                        <CssBaseline />\r\n                        <Title title={list.title} index={index} />\r\n\r\n\r\n                        <Droppable droppableId={list._id}>\r\n                            {(provided) => (\r\n                                <div\r\n                                    ref={provided.innerRef} {...provided.droppableProps}\r\n                                    className={classes.cardContainer}\r\n                                >\r\n                                    {\r\n                                        list.cards && list.cards.map((card, index) => (\r\n                                            <Card key={card._id} card={card} index={index}/>\r\n                                        ))\r\n                                    }\r\n                                    {provided.placeholder}\r\n                                </div>\r\n                            )}\r\n\r\n                        </Droppable>\r\n\r\n\r\n                        <InputConainer listID={list._id} index={index} type={'card'} />\r\n                    </Paper>\r\n                </div>\r\n            )}\r\n\r\n\r\n        </Draggable>\r\n        \r\n    )\r\n}\r\n\r\nexport default List\r\n","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\Lists\\Title.js",[],"D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\Card\\Card.js",["113","114"],"import React, { useState } from 'react'\r\nimport { Paper } from \"@material-ui/core\";\r\nimport { makeStyles, fade } from \"@material-ui/core/styles\";\r\n\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        maxWidth: '300px',\r\n        padding: theme.spacing(1, 1, 1, 2),\r\n        margin: theme.spacing(1),\r\n        cursor: 'pointer'\r\n    },\r\n    popupScreen: {\r\n        width: '100vw',\r\n        height: '100vh',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        position: 'fixed',\r\n        top: '0',\r\n        right: '0',\r\n        left: '0',\r\n        backgroundColor: fade('#000', 0.86),\r\n    },\r\n    popup: {\r\n        width: '600px',\r\n        height: '600px',\r\n        borderRadius: '10px',\r\n        backgroundColor: 'white',\r\n        padding: theme.spacing(4),\r\n        position: 'relative'\r\n    },\r\n    cancel: {\r\n        cursor: 'pointer',\r\n        position: 'absolute',\r\n        right: '0',\r\n        top: '0',\r\n        margin: theme.spacing(4)\r\n    }\r\n\r\n}))\r\n\r\nconst Card = ({ card, index }) => {\r\n\r\n    const classes = useStyles()\r\n\r\n    const [popup, setPopup] = useState(false);\r\n\r\n    const showDetails = (card) => {\r\n        setPopup(true)\r\n        console.log(card.title)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n\r\n            { popup && (\r\n                <div className={classes.popupScreen}>\r\n                    <div className={classes.popup}>\r\n                        <CancelIcon className={classes.cancel} onClick={() => setPopup(false)}/>\r\n                        <h1>{card.title}</h1>\r\n                        <p>Card added - {card.dateAdded}</p>\r\n                    </div>\r\n                </div>\r\n\r\n            )}\r\n\r\n            <Draggable draggableId={card._id} index={index}>\r\n                {(provided) => (\r\n                    <div\r\n                        ref={provided.innerRef} {...provided.dragHandleProps}\r\n                        {...provided.draggableProps}\r\n                        onClick={() => showDetails(card)}\r\n                    >\r\n                        <Paper className={classes.card}>{card.title}</Paper>\r\n                    </div>\r\n                )}\r\n\r\n            </Draggable>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\Input\\InputConainer.js",["115"],"import React, {useState} from 'react'\r\nimport { Paper, Collapse, Typography } from \"@material-ui/core\";\r\nimport { makeStyles, fade } from \"@material-ui/core/styles\";\r\nimport InputCard from './InputCard';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        marginTop: theme.spacing(1),\r\n        minWidth: '300px',\r\n        maxWidth: '300px',\r\n        cursor: 'pointer'\r\n    },\r\n    addCard: {\r\n        padding: theme.spacing(1, 1, 1, 2),\r\n        margin: theme.spacing(0, 1, 1, 1),\r\n        backgroundColor: '#EBECF0',\r\n        '&:hover': {\r\n            backgroundColor: \"grey\"\r\n        }\r\n    }\r\n}))\r\n\r\n\r\nconst InputConainer = ({listID, index, type}) => {\r\n\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(false);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Collapse in={open}>\r\n                <InputCard setOpen={setOpen} listID={listID} index={index} type={type}/>\r\n            </Collapse>\r\n\r\n            <Collapse in={!open}>\r\n                <Paper className={classes.addCard} elevation={0}\r\n                onClick={() => setOpen(!open)}>\r\n                    <Typography>\r\n                        {type==='card' ? '+ Add a card' : '+ Add another list'}\r\n                    </Typography>\r\n                </Paper>\r\n            </Collapse>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputConainer\r\n","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\Input\\InputCard.js",[],"D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\utils\\Data.js",["116"],"\r\nconst cards = [\r\n    {\r\n        id: 'card-1',\r\n        date: '29 Jan, 2021',\r\n        title: 'Learning how to cook',\r\n    },\r\n    {\r\n        id: 'card-2',\r\n        date: '14 Jan, 2021',\r\n        title: 'Making sandwich',\r\n    },\r\n    {\r\n        id: 'card-3',\r\n        date: '24 Jan, 2021',\r\n        title: 'Taking the trash out',\r\n    },\r\n];\r\n\r\nconst data = {\r\n    lists: {\r\n        'list_1': {\r\n            id: 'list_1',\r\n            title: 'Todo',\r\n            cards,\r\n        },\r\n    },\r\n    listIds: ['list_1'],\r\n};\r\n\r\nconst data1 = {\r\n    \"name\": \"Debjit Pramanick\",\r\n    \"email\": \"debjitpramanick1@gmail.com\",\r\n    \"lists\": [\r\n        {\r\n            \"title\": \"Sample List 1\",\r\n            \"cards\": [\r\n                {\r\n                    \"title\": \"Coding\",\r\n                    \"content\": \"I have to learn coding tommorow.\",\r\n                    \"dateAdded\": \"10 Feb, 2021\"\r\n                },\r\n                {\r\n                    \"title\": \"Study\",\r\n                    \"content\": \"I have to study a lot today.\",\r\n                    \"dateAdded\": \"9 Feb, 2021\"\r\n                },\r\n                {\r\n                    \"title\": \"Eating\",\r\n                    \"content\": \"I have to wat at 12 PM.\",\r\n                    \"dateAdded\": \"10 Feb, 2021\"\r\n                },\r\n                {\r\n                    \"title\": \"Meeting\",\r\n                    \"content\": \"I have a meeting at 5 PM.\",\r\n                    \"dateAdded\": \"11 Feb, 2021\"\r\n                },\r\n            ],\r\n        },\r\n\r\n        {\r\n            \"title\": \"Sample List 2\",\r\n            \"cards\": [\r\n                {\r\n                    \"title\": \"Coding\",\r\n                    \"content\": \"I have to learn coding tommorow.\",\r\n                    \"dateAdded\": \"10 Feb, 2021\"\r\n                },\r\n                {\r\n                    \"title\": \"Meeting\",\r\n                    \"content\": \"I have a meeting at 5 PM.\",\r\n                    \"dateAdded\": \"11 Feb, 2021\"\r\n                },\r\n            ],\r\n        },\r\n    ],\r\n}\r\n\r\nexport default data;","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\utils\\StoredAPI.js",[],"D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\NavBar\\Sidebar.js",[],"D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\NavBar\\Navbars.js",[],"D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\utils\\Colors.js",[],"D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\utils\\ImageApi.js",[],"D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\utils\\Config.js",[],"D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\Loader\\Loader.js",[],"D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\Login\\Login.js",["117","118","119","120"],"D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\utils\\Redux\\StateProvider.js",[],"D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\utils\\Redux\\Reducer.js",[],"D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\utils\\Firebase.js",[],"D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\components\\NavBar\\Headerbar.js",["121","122"],"import React from 'react'\r\nimport \"./Headerbar.css\"\r\nimport { Avatar, Button } from \"@material-ui/core\"\r\nimport { useStateValue } from '../../utils/Redux/StateProvider';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\nimport InsertPhotoIcon from '@material-ui/icons/InsertPhoto';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    topbar: {\r\n        backgroundColor: 'transparent'\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    btn: {\r\n        color: 'white',\r\n        backgroundColor: '#145DA0',\r\n        color: '#fff',\r\n        '&:hover': {\r\n            backgroundColor: '#0C2D48'\r\n        },\r\n        cursor: 'pointer',\r\n        border: '1px solid white',\r\n        fontSize: '12px',\r\n        height: '36px'\r\n    }\r\n}))\r\n\r\n\r\nconst Headerbar = ({ setOpenMenu }) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [{ user }, dispatch] = useStateValue();\r\n\r\n\r\n    const logOut = () =>{\r\n        localStorage.removeItem('trelloUser'); \r\n        window.location.reload(true);\r\n    }\r\n\r\n    return (\r\n        <div className='headerContainer'>\r\n            <div className=\"display\">\r\n                <Avatar src={user.photoURL} />\r\n                <h3>{user.displayName} - Dashboard</h3>\r\n            </div>\r\n\r\n\r\n            <div className=\"btn-container\">\r\n\r\n                <Button className={classes.btn}\r\n                    onClick={logOut}>\r\n                        <ExitToAppIcon />\r\n                        Log Out\r\n                </Button>\r\n\r\n                <Button className={classes.btn}\r\n                    onClick={() => setOpenMenu(true)}>\r\n                        <InsertPhotoIcon />\r\n                        Change Background\r\n                </Button>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Headerbar\r\n","D:\\React\\React Projects\\Real React Projects\\Trello Clone\\Trello Clone Files\\trello-frontend\\src\\utils\\Axios.js",[],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":3,"column":22,"nodeType":"129","messageId":"130","endLine":3,"endColumn":26},{"ruleId":"127","severity":1,"message":"131","line":3,"column":8,"nodeType":"129","messageId":"130","endLine":3,"endColumn":13},{"ruleId":"127","severity":1,"message":"132","line":34,"column":12,"nodeType":"129","messageId":"130","endLine":34,"endColumn":16},{"ruleId":"127","severity":1,"message":"133","line":36,"column":12,"nodeType":"129","messageId":"130","endLine":36,"endColumn":19},{"ruleId":"127","severity":1,"message":"134","line":36,"column":21,"nodeType":"129","messageId":"130","endLine":36,"endColumn":31},{"ruleId":"127","severity":1,"message":"135","line":38,"column":12,"nodeType":"129","messageId":"130","endLine":38,"endColumn":18},{"ruleId":"127","severity":1,"message":"136","line":38,"column":20,"nodeType":"129","messageId":"130","endLine":38,"endColumn":29},{"ruleId":"127","severity":1,"message":"137","line":103,"column":30,"nodeType":"129","messageId":"130","endLine":103,"endColumn":36},{"ruleId":"127","severity":1,"message":"138","line":103,"column":38,"nodeType":"129","messageId":"130","endLine":103,"endColumn":49},{"ruleId":"127","severity":1,"message":"139","line":103,"column":51,"nodeType":"129","messageId":"130","endLine":103,"endColumn":55},{"ruleId":"127","severity":1,"message":"140","line":1,"column":16,"nodeType":"129","messageId":"130","endLine":1,"endColumn":24},{"ruleId":"127","severity":1,"message":"128","line":4,"column":21,"nodeType":"129","messageId":"130","endLine":4,"endColumn":25},{"ruleId":"127","severity":1,"message":"141","line":10,"column":10,"nodeType":"129","messageId":"130","endLine":10,"endColumn":25},{"ruleId":"127","severity":1,"message":"141","line":6,"column":10,"nodeType":"129","messageId":"130","endLine":6,"endColumn":25},{"ruleId":"127","severity":1,"message":"142","line":6,"column":27,"nodeType":"129","messageId":"130","endLine":6,"endColumn":36},{"ruleId":"127","severity":1,"message":"128","line":3,"column":22,"nodeType":"129","messageId":"130","endLine":3,"endColumn":26},{"ruleId":"127","severity":1,"message":"143","line":31,"column":7,"nodeType":"129","messageId":"130","endLine":31,"endColumn":12},{"ruleId":"127","severity":1,"message":"140","line":1,"column":17,"nodeType":"129","messageId":"130","endLine":1,"endColumn":25},{"ruleId":"127","severity":1,"message":"144","line":1,"column":27,"nodeType":"129","messageId":"130","endLine":1,"endColumn":36},{"ruleId":"127","severity":1,"message":"145","line":3,"column":18,"nodeType":"129","messageId":"130","endLine":3,"endColumn":28},{"ruleId":"146","severity":1,"message":"147","line":51,"column":12,"nodeType":"148","messageId":"149","endLine":51,"endColumn":15},{"ruleId":"150","severity":1,"message":"151","line":22,"column":9,"nodeType":"152","messageId":"149","endLine":22,"endColumn":14},{"ruleId":"127","severity":1,"message":"153","line":38,"column":22,"nodeType":"129","messageId":"130","endLine":38,"endColumn":30},"no-native-reassign",["154"],"no-negated-in-lhs",["155"],"no-unused-vars","'fade' is defined but never used.","Identifier","unusedVar","'store' is defined but never used.","'data' is assigned a value but never used.","'listIDs' is assigned a value but never used.","'setListIDs' is assigned a value but never used.","'sample' is assigned a value but never used.","'setSample' is assigned a value but never used.","'source' is assigned a value but never used.","'draggableId' is assigned a value but never used.","'type' is assigned a value but never used.","'useState' is defined but never used.","'DragDropContext' is defined but never used.","'Droppable' is defined but never used.","'data1' is assigned a value but never used.","'useEffect' is defined but never used.","'IconButton' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-dupe-keys","Duplicate key 'color'.","ObjectExpression","'dispatch' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]